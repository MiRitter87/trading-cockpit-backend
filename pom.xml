<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
  
  	<groupId>net.gmx.michaelritter</groupId>
  	<artifactId>trading-cockpit-backend</artifactId>
  	<version>1.0.0-SNAPSHOT</version>
  
  	<packaging>war</packaging>
  
  	<name>Trading Cockpit - Backend</name>
  	<description>Backend of the Trading Cockpit.</description>
  
  	<properties>
		<maven.compiler.version>3.13.0</maven.compiler.version>
		<maven.surefire.version>3.2.5</maven.surefire.version>
		<maven.war.version>3.4.0</maven.war.version>
		<maven.checkstyle.version>3.3.1</maven.checkstyle.version>
		<maven.resources.version>3.3.1</maven.resources.version>
		<hsql.version>2.7.2</hsql.version>
		<hibernate.core.version>6.4.5.Final</hibernate.core.version>
		<hibernate.validator.version>8.0.1.Final</hibernate.validator.version>
		<jakarta.el.version>5.0.0</jakarta.el.version>
		<junit.jupiter.version>5.10.2</junit.jupiter.version>
		<log4j2.version>2.23.1</log4j2.version>
		<jersey.version>3.1.6</jersey.version>
		<jakarta.servlet.version>6.0.0</jakarta.servlet.version>
		<okhttp.version>4.12.0</okhttp.version>
		<apache.poi.version>5.2.5</apache.poi.version>
		<opencsv.version>5.9</opencsv.version>
		<jfreechart.version>1.5.4</jfreechart.version>
		<htmlunit.version>2.70.0</htmlunit.version>
		<angus.mail.version>2.0.3</angus.mail.version>
				
		<!-- Define the location of the custom ruleset of Apache Checkstyle plugin. -->
    	<checkstyle.config.location>checkstyle/checkstyle.xml</checkstyle.config.location>
	</properties>
	
	<dependencies>
		<!-- HSQL database for data storage -->
		<dependency>
    		<groupId>org.hsqldb</groupId>
    		<artifactId>hsqldb</artifactId>
    		<version>${hsql.version}</version>
    		<scope>runtime</scope>
		</dependency>
		
		<!-- Object-relational mapping using Hibernate -->
		<dependency>
	    	<groupId>org.hibernate</groupId>
	    	<artifactId>hibernate-core</artifactId>
	    	<version>${hibernate.core.version}</version>
		</dependency>
		
		<!-- The Hibernate reference implementation of the Validation API. This is distinct from the persistence part of Hibernate. -->
		<dependency>
	    	<groupId>org.hibernate.validator</groupId>
	    	<artifactId>hibernate-validator</artifactId>
	    	<version>${hibernate.validator.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.hibernate.validator</groupId>
		    <artifactId>hibernate-validator-annotation-processor</artifactId>
		    <version>${hibernate.validator.version}</version>
		</dependency>
		
		<!-- JUnit 5 -->
  		<dependency>
  			<groupId>org.junit.jupiter</groupId>
 			<artifactId>junit-jupiter-engine</artifactId>
  			<version>${junit.jupiter.version}</version>
  			<scope>test</scope>
		</dependency>
		
		<!-- Expression Language dependencies needed by the Hibernate Validation API. -->
		<dependency>
		    <groupId>org.glassfish.expressly</groupId>
		    <artifactId>expressly</artifactId>
		    <version>${jakarta.el.version}</version>
		</dependency>
		
		<!-- Log4J Logging -->
		<dependency>
    		<groupId>org.apache.logging.log4j</groupId>
    		<artifactId>log4j-api</artifactId>
    		<version>${log4j2.version}</version>
  		</dependency>
  		<dependency>
    		<groupId>org.apache.logging.log4j</groupId>
    		<artifactId>log4j-core</artifactId>
    		<version>${log4j2.version}</version>
  		</dependency>
  		<dependency>
    		<groupId>org.apache.logging.log4j</groupId>
    		<artifactId>log4j-web</artifactId>
    		<version>${log4j2.version}</version>
  		</dependency>
  		
  		<!-- Jersey for RESTful Service -->
		<dependency>
    		<groupId>org.glassfish.jersey.containers</groupId>
   			<artifactId>jersey-container-servlet</artifactId>
    		<version>${jersey.version}</version>
		</dependency>
		
		<!-- Jersey: Needed for correct Servlet initialization (Dependency Injection Implementation) -->
		<dependency>
    		<groupId>org.glassfish.jersey.inject</groupId>
    		<artifactId>jersey-hk2</artifactId>
    		<version>${jersey.version}</version>
		</dependency>
		
		<!-- Jersey: For usage of JSON media type -->
		<dependency>
 			<groupId>org.glassfish.jersey.media</groupId>
  			<artifactId>jersey-media-json-jackson</artifactId>
  			<version>${jersey.version}</version>
		</dependency>
		
		<!-- Usage of custom servlets -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>${jakarta.servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Used for HTTP queries of third-party WebServices -->
		<dependency>
    		<groupId>com.squareup.okhttp3</groupId>
    		<artifactId>okhttp</artifactId>
    		<version>${okhttp.version}</version>
		</dependency>
		
		<!-- Apache POI used for generating Excel files -->
		<dependency>
    		<groupId>org.apache.poi</groupId>
    		<artifactId>poi</artifactId>
    		<version>${apache.poi.version}</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.poi</groupId>
    		<artifactId>poi-ooxml</artifactId>
    		<version>${apache.poi.version}</version>
		</dependency>
		
		<!-- OpenCSV used to parse CSV data. -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		
		<!-- JFreeChart is used to generate charts. -->
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>${jfreechart.version}</version>
		</dependency>
		
		<!-- HTMLUnit is used to extract information from Websites. -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>${htmlunit.version}</version>
		</dependency>
		
		<!-- Angus Mail is used to send E-Mails. -->
		<dependency>
			<groupId>org.eclipse.angus</groupId>
			<artifactId>angus-mail</artifactId>
			<version>${angus.mail.version}</version>
		</dependency>
	</dependencies>
  
  	<build>
		<plugins>
			<!-- Compile java 17 -->
			<plugin>
		    	<groupId>org.apache.maven.plugins</groupId>
		     	<artifactId>maven-compiler-plugin</artifactId>
		     	<version>${maven.compiler.version}</version>
		     	<configuration>
		     		<release>17</release>
		     	</configuration>
			</plugin>
			
			<!-- Builds a deployable war file -->
			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-war-plugin</artifactId>
    			<version>${maven.war.version}</version>
			</plugin>
			
			<!-- This plugin executes JUnit 5 tests in the test phase of the build. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
            </plugin>
            
            <!-- Copy the properties file for application configuration. -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/conf</outputDirectory>
							<resources>          
								<resource>
									<directory>conf</directory>
									<filtering>true</filtering>
								</resource>
							</resources>              
						</configuration>            
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<!-- Checking for adherence to general code conventions. -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>