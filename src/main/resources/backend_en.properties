
chart.aboveSma200.getError                                         = An error occurred while generating the instruments above SMA(200) Chart.
chart.aboveSma200.timeSeriesName                                   = Percentage of instruments above their SMA(200) (%)
chart.aboveSma200.titleName                                        = Percentage of instruments above their SMA(200) (%)
chart.aboveSma50.getError                                          = An error occurred while generating the instruments above SMA(50) Chart.
chart.aboveSma50.timeSeriesName                                    = Percentage of instruments above their SMA(50) (%)
chart.aboveSma50.timeSeriesSma10Name                               = SMA(10)
chart.aboveSma50.titleName                                         = Percentage of instruments above their SMA(50) (%)
chart.adNumber.getError                                            = An error occurred while generating the cumulative Advance/Decline Number Chart.
chart.adNumber.timeSeriesName                                      = Advance/Decline Number (cumulative)
chart.adNumber.timeSeriesSma50Name                                 = SMA(50)
chart.adNumber.titleName                                           = Advance/Decline Number (cumulative)
chart.aggregateIndicator.getError                                  = An error occurred while generating the Aggregate Indicator Chart.
chart.aggregateIndicator.noQuotationsError                         = Not enough quotation data exist for the selected instrument or no statistics are referenced.
chart.aggregateIndicator.timeSeriesName                            = Aggregate Indicator
chart.distributionDays.getError                                    = An error occurred while generating the Distribution Days Chart.
chart.distributionDays.noQuotationsError                           = No quotation data exist for the selected instrument.
chart.distributionDays.timeSeriesDDSumName                         = # Distribution Days (25 Days)
chart.followThroughDays.getError                                   = An error occurred while generating the Follow-Through Days Chart.
chart.followThroughDays.noQuotationsError                          = No quotation data exist for the selected instrument.
chart.followThroughDays.timeSeriesFailedFTDName                    = Failed FTDs
chart.general.timeSeriesPriceName                                  = Price
chart.general.timeSeriesVolumeName                                 = Volume
chart.healthCheck.getError                                         = An error occurred while generating the Health Check Chart.
chart.healthCheck.noQuotationsError                                = No quotation data exist for the selected instrument.
chart.healthCheck.timeSeriesEventName                              = # Events
chart.healthCheck.timeSeriesEventName.all                          = # Events (Confirmation - Violation, {0} Days)
chart.healthCheck.timeSeriesEventName.confirmations                = # Events (Confirmation, {0} Days)
chart.healthCheck.timeSeriesEventName.confirmationsWithoutCounting = # Events (Confirmations Without Counting, {0} Days)
chart.healthCheck.timeSeriesEventName.strength                     = # Events (Selling into Strength, {0} Days)
chart.healthCheck.timeSeriesEventName.weakness                     = # Events (Selling into Weakness, {0} Days)
chart.healthCheck.timeSeriesEventName.weaknessWithoutCounting      = # Events (Weakness Without Counting, {0} Days)
chart.pocketPivots.getError                                        = An error occurred while generating the Pocket Pivots Chart.
chart.pocketPivots.noQuotationsError                               = No quotation data exist for the selected instrument.
chart.pocketPivots.timeSeriesSma10Name                             = SMA(10)
chart.priceVolume.getError                                         = An error occurred while generating the Price and Volume Chart.
chart.priceVolume.noQuotationsError                                = No quotation data exist for the selected instrument.
chart.priceVolume.timeSeriesBbwName                                = BBW(10,2)
chart.priceVolume.timeSeriesEma21Name                              = EMA(21)
chart.priceVolume.timeSeriesRsLineName                             = RS Line
chart.priceVolume.timeSeriesSlowStochasticName                     = Slow Stochastic(14,3)
chart.priceVolume.timeSeriesSma150Name                             = SMA(150)
chart.priceVolume.timeSeriesSma200Name                             = SMA(200)
chart.priceVolume.timeSeriesSma30VolumeName                        = SMA(30)
chart.priceVolume.timeSeriesSma50Name                              = SMA(50)
chart.priceVolumeMini.getError                                     = An error occurred while generating the miniature Price and Volume Chart.
chart.priceVolumeMini.noQuotationsError                            = No quotation data exist for the selected instrument.
chart.ritterMarketTrend.getError                                   = An error occurred while generating the Ritter Market Trend Chart.
chart.ritterMarketTrend.timeSeriesName                             = Ritter Market Trend - SMA(10)
chart.ritterMarketTrend.titleName                                  = Ritter Market Trend - SMA(10)
chart.ritterPatternIndicator.getError                              = An error occurred while generating the Ritter Pattern Indicator Chart.
chart.ritterPatternIndicator.timeSeriesName                        = Move On Volume - SMA(10)
chart.ritterPatternIndicator.titleName                             = Ritter Pattern Indicator - SMA(10)

chartData.healthCheck.getError = An error occurred while generating the data of the Health Check Chart.
chartData.priceVolume.getError = An error occurred while generating the data of the Price and Volume Chart.

dashboard.getMarketHealthStatusError = An error occurred during the determination of the market health status.
dashboard.wrongInstrumentType        = The Instrument has to be of type sector or industry group.

horizontalLine.addError                = An error occurred while trying to add a new horizontal line.
horizontalLine.addSuccess              = The horizontal line has been successfully created.
horizontalLine.deleteError             = An error occurred while trying to delete horizontal line with ID {0}.
horizontalLine.deleteSuccess           = The horizontal line with ID {0} has been successfully deleted.
horizontalLine.getHorizontalLineError  = An error occurred while trying to get data of horizontal line with ID {0}.
horizontalLine.getHorizontalLinesError = An error occurred during horizontal line data retrieval.
horizontalLine.notFound                = The horizontal line with ID {0} could not be found.
horizontalLine.updateError             = An error occurred while trying to update the horizontal line with ID {0}.
horizontalLine.updateSuccess           = The horizontal line with ID {0} has been successfully updated.
horizontalLine.updateUnchanged         = The data of the horizontal line with ID {0} have not been changed. Saving is not necessary.

instrument.addError                            = An error occurred while trying to add a new instrument.
instrument.addSuccess                          = The instrument has been successfully created.
instrument.attribute.symbol                    = Symbol
instrument.createDuplicate                     = An instrument with symbol {0} at the stock exchange {1} already exists.
instrument.dataSourceList.wrongType            = The data source list can only be defined for instruments of type ETF, sector or industry group.
instrument.deleteError                         = An error occurred while trying to delete instrument with ID {0}.
instrument.deleteSuccess                       = The instrument with ID {0} has been successfully deleted.
instrument.deleteUsedInHorizontalLine          = The Instrument with ID {0} can not be deleted because horizontal lines are referenced.
instrument.deleteUsedInInstrument              = The Instrument with ID {0} can not be deleted because it is used as sector or industry group in Instrument with ID {1}.
instrument.deleteUsedInList                    = The Instrument with ID {0} can not be deleted because it is used in List with ID {1}.
instrument.deleteUsedInPriceAlert              = The Instrument with ID {0} can not be deleted because it is used in Price Alert with ID {1}.
instrument.deleteUsedInQuotation               = The Instrument with ID {0} can not be deleted because quotations are referenced.
instrument.deleteUsedInRatio                   = The Instrument with ID {0} can not be deleted because it is used as dividend or divisor in Instrument with ID {1}.
instrument.dividend.definedOnTypeNotRatio      = No dividend needs to be defined if Instrument is not of type 'RATIO'.
instrument.dividend.notNull.message            = No dividend has been defined.
instrument.dividend.typeRatio                  = A dividend can not be of type 'RATIO'.
instrument.divisor.definedOnTypeNotRatio       = No divisor needs to be defined if Instrument is not of type 'RATIO'.
instrument.divisor.notNull.message             = No divisor has been defined.
instrument.divisor.typeRatio                   = A divisor can not be of type 'RATIO'.
instrument.getError                            = An error occurred while trying to get data of instrument with ID {0}.
instrument.getHealthError                      = An error occurred during the health check. Please check the log file of the server.
instrument.getHealthNoQuotationsForDate        = There are no Quotation data available at and after the given start date.
instrument.getInstrumentsError                 = An error occurred during instrument data retrieval.
instrument.ig.igReference                      = An industry group can not be linked to another industry group.
instrument.ig.wrongReference                   = The industry group of the instrument has to be linked to another instrument of type industry group.
instrument.investingId.dataSourceListeDefined  = If a data source list is defined, no Instrument ID of investing.com can be defined.
instrument.investingId.size.message            = The Instrument ID of investing.com consists of {0} characters. The required length is between {1} and {2} characters.
instrument.investingId.typeRatio               = The Instrument ID of investing.com can't be defined, if instrument is of type 'RATIO'.
instrument.notFound                            = The instrument with ID {0} could not be found.
instrument.sector.sectorReference              = A sector can not be linked to another sector.
instrument.sector.wrongReference               = The sector of the instrument has to be linked to another instrument of type sector.
instrument.stockExchange.dataSourceListDefined = The data source list can only be defined, if no stock exchange is defined.
instrument.stockExchange.definedOnTypeRatio    = No stock exchange needs to be defined if Instrument is of type 'RATIO'.
instrument.stockExchange.notNull.message       = No stock exchange has been defined.
instrument.symbol.dataSourceListDefined        = The data source list can only be defined, if no symbol is defined.
instrument.symbol.definedOnTypeRatio           = No symbol needs to be defined if Instrument is of type 'RATIO'.
instrument.symbol.notNull.message              = No symbol has been defined.
instrument.symbol.size.message                 = The symbol consists of {0} characters. The required length is between {1} and {2} characters.
instrument.updateDuplicate                     = Update not possible. An instrument with symbol {0} at the stock exchange {1} already exists.
instrument.updateError                         = An error occurred while trying to update the instrument with ID {0}.
instrument.updateSuccess                       = The instrument with ID {0} has been successfully updated.
instrument.updateUnchanged                     = The data of the instrument with ID {0} have not been changed. Saving is not necessary.

list.addError               = An error occurred while trying to add a new list.
list.addSuccess             = The list has been successfully created.
list.deleteError            = An error occurred while trying to delete list with ID {0}.
list.deleteSuccess          = The list with ID {0} has been successfully deleted.
list.deleteUsedAsDataSource = The List with ID {0} can not be deleted because it is used as data source in Instrument with ID {1}.
list.deleteUsedInScan       = The List with ID {0} can not be deleted because it is used in Scan with ID {1}.
list.getError               = An error occurred while trying to get data of list with ID {0}.
list.getExcelError          = An error occurred while trying to generate the Excel file for the list with ID {0}.
list.getListsError          = An error occurred during list data retrieval.
list.notFound               = The list with ID {0} could not be found.
list.updateError            = An error occurred while trying to update the list with ID {0}.
list.updateSuccess          = The list with ID {0} has been successfully updated.
list.updateUnchanged        = The data of the list with ID {0} have not been changed. Saving is not necessary.

priceAlert.addError                         = An error occurred while trying to add a new price alert.
priceAlert.addSuccess                       = The price alert has been successfully created.
priceAlert.alertMailAddress.notNull.message = No E-Mail address has been defined, although the mail transmission has been activated.
priceAlert.alertMailAddress.size.message    = The E-Mail address consists of {0} characters. The required length is between {1} and {2} characters.
priceAlert.deleteError                      = An error occurred while trying to delete price alert with ID {0}.
priceAlert.deleteSuccess                    = The price alert with ID {0} has been successfully deleted.
priceAlert.getError                         = An error occurred while trying to get data of price alert with ID {0}.
priceAlert.getPriceAlertsError              = An error occurred during price alert data retrieval.
priceAlert.mailBody                         = Trigger time: {0} <br>\r\nTrigger price: {1} {2} <br>\r\nDistance to trigger: {3} %  <br>
priceAlert.mailSubjectGreatherThen          = {0} >= {1} {2}
priceAlert.mailSubjectLessThen              = {0} <= {1} {2}
priceAlert.notFound                         = The price alert with ID {0} could not be found.
priceAlert.updateAfterTriggered             = A price alert can't be modified after it has been triggered.
priceAlert.updateError                      = An error occurred while trying to update the price alert with ID {0}.
priceAlert.updateSuccess                    = The price alert with ID {0} has been successfully updated.
priceAlert.updateUnchanged                  = The data of the price alert with ID {0} have not been changed. Saving is not necessary.

protocol.bullishGapUp              = Bullish Gap up ({0}%)
protocol.churning                  = Churning on increased volume
protocol.climaxOneWeek             = Climax movement: {0}% within one week
protocol.climaxThreeWeeks          = Climax movement: {0}% within three weeks
protocol.closeAboveSma50HighVolume = Close above the SMA(50) - increased volume
protocol.closeBelowEma21           = Close below the EMA(21)
protocol.closeBelowSma50HighVolume = Close below the SMA(50) - increased volume
protocol.closeBelowSma50LowVolume  = Close below the SMA(50) - decreased volume
protocol.closeNearHigh             = Close near high
protocol.closeNearLow              = Close near low
protocol.distributionDay           = Distribution Day
protocol.downOnVolume              = Down on increased volume
protocol.exhaustionGapUp           = Exhaustion Gap up ({0}%)
protocol.extendedAboveSma200       = Price {0}% above the SMA(200)
protocol.extendedOneYear           = Extended 1 year historically
protocol.largestDailySpread        = Largest daily spread of the year ({0}%)
protocol.largestDailyVolume        = Largest daily volume of the year
protocol.largestDownDay            = Largest Down-Day of the Year ({0}%)
protocol.largestUpDay              = Largest Up-Day of the Year ({0}%)
protocol.moreBadCloses             = More bad closes than good closes ({0} of {1})
protocol.moreDownDays              = More down-days than up-days ({0} of {1})
protocol.moreGoodCloses            = More good closes than bad closes ({0} of {1})
protocol.moreUpDays                = More up-days than down-days ({0} of {1})
protocol.new52WeekHigh             = New 52-week high
protocol.pocketPivot               = Pocket Pivot
protocol.reversal                  = High volume reversal
protocol.rsLineNew52WeekHigh       = RS-line new 52-week high
protocol.threeHigherCloses         = Three higher closes on increased volume
protocol.threeLowerCloses          = Three lower closes on increased volume
protocol.timeClimax                = Climax movement: At least 7 of the last 10 days up
protocol.upOnVolume                = Up on increased volume

quotation.attribute.atrp                 = ATR%
quotation.attribute.date                 = Date
quotation.attribute.price                = Price
quotation.attribute.rsNumber             = RS Number
quotation.getQuotationsOfInstrumentError = An error occurred while trying to get quotations of instrument with ID {0}.
quotation.getRecentQuotationsError       = An error occurred during retrieval of most recent quotation data.
quotation.missingDivisorQuotations       = There are no quotation data available for the instrument with ID {0}. Therefore no RS-Line can be calculated.
quotation.noIgReferenced                 = An industry group has to be referenced to the Instrument with ID {0} first.
quotation.noTemplateError                = No Scan Template has been provided.

scan.addError                   = An error occurred while trying to add a new scan.
scan.addSuccess                 = The scan has been successfully created.
scan.deleteError                = An error occurred while trying to delete scan with ID {0}.
scan.deleteSuccess              = The scan with ID {0} has been successfully deleted.
scan.getError                   = An error occurred while trying to get data of scan with ID {0}.
scan.getScansError              = An error occurred during scan data retrieval.
scan.notFound                   = The scan with ID {0} could not be found.
scan.updateError                = An error occurred while trying to update the scan with ID {0}.
scan.updateScansInProgressExist = The scanner with ID {0} is already in progress.
scan.updateSuccess              = The scan with ID {0} has been successfully updated.
scan.updateUnchanged            = The data of the scan with ID {0} have not been changed. Saving is not necessary.

statistic.errorOnSectorAndIgRequested = The request of statistics using both sector and industry group is not valid.
statistic.getStatisticsError          = An error occurred during statistic data retrieval.
statistic.sectorAndIgDefined          = The definition of a statistic using both sector and industry group is not valid.
